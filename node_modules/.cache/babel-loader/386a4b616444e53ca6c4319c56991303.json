{"ast":null,"code":"var _jsxFileName = \"/home/lukaszinglot/Pulpit/pageprodwa/src/components/UserHeader.tsx\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getUsers, getPosts } from \"../store/actions\";\nimport UserCard from \"./UserCard\";\n\nclass UserHeader extends Component {\n  componentDidMount() {\n    this.props.getUsers();\n  }\n\n  renderUsers() {\n    if (this.props.user.ids.length) {\n      return this.props.user.data.map(({\n        id,\n        name,\n        email,\n        phone,\n        website,\n        company\n      }) => {\n        return React.createElement(\"div\", {\n          className: \"ui column four wide\",\n          key: id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        }, React.createElement(UserCard, {\n          name: name,\n          emailAdress: email,\n          phone: phone,\n          webSite: website,\n          companyName: company.name,\n          catchPhrase: company.catchPhrase,\n          bs: company.bs,\n          id: id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        }));\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"ui grid stretched\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, this.renderUsers());\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.userReducer\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getUsers,\n  getPosts\n})(UserHeader);","map":{"version":3,"sources":["/home/lukaszinglot/Pulpit/pageprodwa/src/components/UserHeader.tsx"],"names":["React","Component","connect","getUsers","getPosts","UserCard","UserHeader","componentDidMount","props","renderUsers","user","ids","length","data","map","id","name","email","phone","website","company","catchPhrase","bs","render","mapStateToProps","state","userReducer"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,EAAmBC,QAAnB,QAAmC,kBAAnC;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAwBA,MAAMC,UAAN,SAAyBL,SAAzB,CAA8C;AAC5CM,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWL,QAAX;AACD;;AACDM,EAAAA,WAAW,GAAG;AACZ,QAAI,KAAKD,KAAL,CAAWE,IAAX,CAAgBC,GAAhB,CAAoBC,MAAxB,EAAgC;AAC9B,aAAO,KAAKJ,KAAL,CAAWE,IAAX,CAAgBG,IAAhB,CAAqBC,GAArB,CACL,CAAC;AAAEC,QAAAA,EAAF;AAAMC,QAAAA,IAAN;AAAYC,QAAAA,KAAZ;AAAmBC,QAAAA,KAAnB;AAA0BC,QAAAA,OAA1B;AAAmCC,QAAAA;AAAnC,OAAD,KAAkD;AAChD,eACE;AAAK,UAAA,SAAS,EAAC,qBAAf;AAAqC,UAAA,GAAG,EAAEL,EAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,QAAD;AACE,UAAA,IAAI,EAAEC,IADR;AAEE,UAAA,WAAW,EAAEC,KAFf;AAGE,UAAA,KAAK,EAAEC,KAHT;AAIE,UAAA,OAAO,EAAEC,OAJX;AAKE,UAAA,WAAW,EAAEC,OAAO,CAACJ,IALvB;AAME,UAAA,WAAW,EAAEI,OAAO,CAACC,WANvB;AAOE,UAAA,EAAE,EAAED,OAAO,CAACE,EAPd;AAQE,UAAA,EAAE,EAAEP,EARN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CADF;AAcD,OAhBI,CAAP;AAkBD;AACF;;AAEDQ,EAAAA,MAAM,GAAG;AACP,WAAO;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAoC,KAAKd,WAAL,EAApC,CAAP;AACD;;AA7B2C;;AAgC9C,MAAMe,eAAe,GAAIC,KAAD,IAAqB;AAC3C,SAAO;AAAEf,IAAAA,IAAI,EAAEe,KAAK,CAACC;AAAd,GAAP;AACD,CAFD;;AAIA,eAAexB,OAAO,CACpBsB,eADoB,EAEpB;AAAErB,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAFoB,CAAP,CAGbE,UAHa,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getUsers, getPosts } from \"../store/actions\";\nimport UserCard from \"./UserCard\";\nimport { AppState } from \"../store/index.d\";\n\ninterface UserProps {\n  user: {\n    ids: {\n      length: number;\n    };\n    data: {\n      id: string;\n      name: string;\n      email: string;\n      phone: string;\n      website: string;\n      company: {\n        name: string;\n        catchPhrase: string;\n        bs: string;\n      };\n    }[];\n  };\n  getUsers: () => {}[];\n}\n\nclass UserHeader extends Component<UserProps> {\n  componentDidMount() {\n    this.props.getUsers();\n  }\n  renderUsers() {\n    if (this.props.user.ids.length) {\n      return this.props.user.data.map(\n        ({ id, name, email, phone, website, company }) => {\n          return (\n            <div className=\"ui column four wide\" key={id}>\n              <UserCard\n                name={name}\n                emailAdress={email}\n                phone={phone}\n                webSite={website}\n                companyName={company.name}\n                catchPhrase={company.catchPhrase}\n                bs={company.bs}\n                id={id}\n              />\n            </div>\n          );\n        }\n      );\n    }\n  }\n\n  render() {\n    return <div className=\"ui grid stretched\">{this.renderUsers()}</div>;\n  }\n}\n\nconst mapStateToProps = (state: AppState) => {\n  return { user: state.userReducer };\n};\n\nexport default connect<AppState>(\n  mapStateToProps,\n  { getUsers, getPosts }\n)(UserHeader);\n"]},"metadata":{},"sourceType":"module"}