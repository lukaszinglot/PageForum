{"ast":null,"code":"var _jsxFileName = \"/home/lukaszinglot/Pulpit/pageprodwa/src/components/ShowPost.tsx\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getComments, addCommentCreator } from \"../store/actions\";\nimport { Link } from \"react-router-dom\";\nimport { Icon } from \"semantic-ui-react\";\nimport \"./showPost.css\";\nimport ModalCommon from \"./ModalCommon\";\n\nclass ShowPost extends Component {\n  constructor(props) {\n    super(props);\n\n    this.show = () => this.setState({\n      open: true\n    });\n\n    this.close = () => this.setState({\n      open: false\n    });\n\n    this.state = {\n      hideComments: false,\n      open: false,\n      inputNameValue: \"\",\n      inputEmailValue: \"\",\n      textAreaValue: \"\"\n    };\n    this.showComments = this.showComments.bind(this);\n    this.formHandler = this.formHandler.bind(this);\n    this.handleInputChangeName = this.handleInputChangeName.bind(this);\n    this.handleInputChangeEmail = this.handleInputChangeEmail.bind(this);\n    this.handleTextAreaChange = this.handleTextAreaChange.bind(this);\n  }\n\n  componentDidMount() {\n    if (!this.props.comments.length) {\n      this.props.getComments();\n    }\n  }\n\n  handleInputChangeName(e) {\n    this.setState({\n      inputNameValue: e.target.value\n    });\n  }\n\n  handleInputChangeEmail(e) {\n    this.setState({\n      inputEmailValue: e.target.value\n    });\n  }\n\n  formHandler(e) {\n    const _this$state = this.state,\n          inputNameValue = _this$state.inputNameValue,\n          inputEmailValue = _this$state.inputEmailValue,\n          textAreaValue = _this$state.textAreaValue;\n    const _this$props = this.props,\n          match = _this$props.match,\n          comments = _this$props.comments,\n          addCommentCreator = _this$props.addCommentCreator;\n    e.preventDefault();\n    let numberOfComments = comments.length + 1;\n    addCommentCreator(parseInt(match.params.id), numberOfComments, inputNameValue, inputEmailValue, textAreaValue);\n    this.setState({\n      open: false,\n      inputNameValue: \"\",\n      inputEmailValue: \"\",\n      textAreaValue: \"\"\n    });\n  }\n\n  handleTextAreaChange(e) {\n    this.setState({\n      textAreaValue: e.target.value\n    });\n  }\n\n  showComments() {\n    this.setState({\n      hideComments: !this.state.hideComments\n    });\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          open = _this$state2.open,\n          inputNameValue = _this$state2.inputNameValue,\n          inputEmailValue = _this$state2.inputEmailValue,\n          textAreaValue = _this$state2.textAreaValue,\n          hideComments = _this$state2.hideComments;\n    const _this$props2 = this.props,\n          location = _this$props2.location,\n          match = _this$props2.match,\n          comments = _this$props2.comments;\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      className: \"ui grid segment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"two wide column left aligned\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/users/\".concat(location.post.userId),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"arrow left\",\n      size: \"big\",\n      color: \"blue\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }), \"back\")), React.createElement(\"div\", {\n      className: \"thirteen wide column fontSize boldFont\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"ui header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, location.user[parseInt(location.post.userId)].name)), React.createElement(\"div\", {\n      className: \"one wide column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"ui segment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, location.post.title), location.post.body), React.createElement(\"button\", {\n      onClick: this.showComments,\n      className: \"btn-post\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, \"Show Comments\"), React.createElement(ModalCommon, {\n      open: open,\n      onClose: this.close,\n      onClick: this.show,\n      onSubmit: this.formHandler,\n      inputNameValue: inputNameValue,\n      inputEmailValue: inputEmailValue,\n      textAreaValue: textAreaValue,\n      onInputChange: this.handleInputChangeName,\n      onInputEmailChange: this.handleInputChangeEmail,\n      onTextAreaChange: this.handleTextAreaChange,\n      text: \"Add Comment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }), hideComments && comments.map(({\n      name,\n      postId,\n      body,\n      email\n    }) => {\n      return React.createElement(\"div\", {\n        key: name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, postId === parseInt(match.params.id) ? React.createElement(\"div\", {\n        className: \"ui segment\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"ui\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"ui grid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"p-name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, name), React.createElement(\"div\", {\n        className: \"p-email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, email)), React.createElement(\"div\", {\n        className: \"p-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, body))) : null);\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    comments: state.postsReducer.comments\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getComments,\n  addCommentCreator\n})(ShowPost);","map":{"version":3,"sources":["/home/lukaszinglot/Pulpit/pageprodwa/src/components/ShowPost.tsx"],"names":["React","Component","connect","getComments","addCommentCreator","Link","Icon","ModalCommon","ShowPost","constructor","props","show","setState","open","close","state","hideComments","inputNameValue","inputEmailValue","textAreaValue","showComments","bind","formHandler","handleInputChangeName","handleInputChangeEmail","handleTextAreaChange","componentDidMount","comments","length","e","target","value","match","preventDefault","numberOfComments","parseInt","params","id","render","location","post","userId","user","name","title","body","map","postId","email","mapStateToProps","postsReducer"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getComments, addCommentCreator } from \"../store/actions\";\nimport { Link } from \"react-router-dom\";\nimport { AppState } from \"../store/index.d\";\nimport { Icon } from \"semantic-ui-react\";\nimport \"./showPost.css\";\nimport ModalCommon from \"./ModalCommon\";\n\ninterface ShowProps {\n  location: {\n    user: {\n      name: string;\n    }[];\n    post: {\n      userId: string;\n      body: string;\n      title: string;\n    };\n  };\n\n  comments: {\n    name: string;\n    postId: number;\n    body: string;\n    email: string;\n  }[];\n  addCommentCreator: (\n    parseInt: number,\n    numberOfPosts: number,\n    inputNameValue: string,\n    inputEmailValue: string,\n    textAreaValue: string\n  ) => AppState;\n  match: {\n    params: {\n      id: string;\n    };\n  };\n  getComments: () => [];\n  ShowPost: () => void;\n  showComments: () => boolean;\n}\n\ninterface ShowState {\n  inputNameValue: string;\n  inputEmailValue: string;\n  textAreaValue: string;\n  hideComments: boolean;\n  open: boolean;\n}\n\nclass ShowPost extends Component<ShowProps, ShowState> {\n  constructor(props: ShowProps) {\n    super(props);\n    this.state = {\n      hideComments: false,\n      open: false,\n      inputNameValue: \"\",\n      inputEmailValue: \"\",\n      textAreaValue: \"\"\n    };\n    this.showComments = this.showComments.bind(this);\n    this.formHandler = this.formHandler.bind(this);\n    this.handleInputChangeName = this.handleInputChangeName.bind(this);\n    this.handleInputChangeEmail = this.handleInputChangeEmail.bind(this);\n    this.handleTextAreaChange = this.handleTextAreaChange.bind(this);\n  }\n\n  componentDidMount() {\n    if (!this.props.comments.length) {\n      this.props.getComments();\n    }\n  }\n\n  show = () => this.setState({ open: true });\n  close = () => this.setState({ open: false });\n\n  handleInputChangeName(e: React.ChangeEvent<HTMLInputElement>) {\n    this.setState({\n      inputNameValue: e.target.value\n    });\n  }\n\n  handleInputChangeEmail(e: React.ChangeEvent<HTMLInputElement>) {\n    this.setState({\n      inputEmailValue: e.target.value\n    });\n  }\n\n  formHandler(e: React.FormEvent<HTMLFormElement>) {\n    const { inputNameValue, inputEmailValue, textAreaValue } = this.state;\n    const { match, comments, addCommentCreator } = this.props;\n    e.preventDefault();\n    let numberOfComments = comments.length + 1;\n\n    addCommentCreator(\n      parseInt(match.params.id),\n      numberOfComments,\n      inputNameValue,\n      inputEmailValue,\n      textAreaValue\n    );\n\n    this.setState({\n      open: false,\n      inputNameValue: \"\",\n      inputEmailValue: \"\",\n      textAreaValue: \"\"\n    });\n  }\n\n  handleTextAreaChange(e: any) {\n    this.setState({\n      textAreaValue: e.target.value\n    });\n  }\n\n  showComments() {\n    this.setState({\n      hideComments: !this.state.hideComments\n    });\n  }\n\n  render() {\n    const {\n      open,\n      inputNameValue,\n      inputEmailValue,\n      textAreaValue,\n      hideComments\n    } = this.state;\n    const { location, match, comments } = this.props;\n    return (\n      <>\n        <div className=\"ui grid segment\">\n          <div className=\"two wide column left aligned\">\n            <Link to={`/users/${location.post.userId}`}>\n              <Icon name=\"arrow left\" size=\"big\" color=\"blue\" />\n              back\n            </Link>\n          </div>\n          <div className=\"thirteen wide column fontSize boldFont\">\n            <h1 className=\"ui header\">\n              {location.user[parseInt(location.post.userId)].name}\n            </h1>\n          </div>\n          <div className=\"one wide column\" />\n        </div>\n        <div className=\"ui segment\">\n          <h1>{location.post.title}</h1>\n          {location.post.body}\n        </div>\n        <button onClick={this.showComments} className=\"btn-post\">\n          Show Comments\n        </button>\n        <ModalCommon\n          open={open}\n          onClose={this.close}\n          onClick={this.show}\n          onSubmit={this.formHandler}\n          inputNameValue={inputNameValue}\n          inputEmailValue={inputEmailValue}\n          textAreaValue={textAreaValue}\n          onInputChange={this.handleInputChangeName}\n          onInputEmailChange={this.handleInputChangeEmail}\n          onTextAreaChange={this.handleTextAreaChange}\n          text=\"Add Comment\"\n        />\n        {hideComments &&\n          comments.map(({ name, postId, body, email }) => {\n            return (\n              <div key={name}>\n                {postId === parseInt(match.params.id) ? (\n                  <div className=\"ui segment\">\n                    <div className=\"ui\">\n                      <div className=\"ui grid\">\n                        <div className=\"p-name\">{name}</div>\n                        <div className=\"p-email\">{email}</div>\n                      </div>\n                      <div className=\"p-body\">{body}</div>\n                    </div>\n                  </div>\n                ) : null}\n              </div>\n            );\n          })}\n      </>\n    );\n  }\n}\nconst mapStateToProps = (state: AppState) => {\n  return {\n    comments: state.postsReducer.comments\n  };\n};\n\nexport default connect<AppState>(\n  mapStateToProps,\n  {\n    getComments,\n    addCommentCreator\n  }\n)(ShowPost);\n"]},"metadata":{},"sourceType":"module"}