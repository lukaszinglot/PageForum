{"ast":null,"code":"var _jsxFileName = \"/home/lukaszinglot/Pulpit/pageprodwa/src/components/PostList.tsx\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getPosts, getUsers, addPostCreator, deletePostCreator } from \"../store/actions\";\nimport { Link } from \"react-router-dom\";\nimport \"./postList.css\";\nimport { Icon } from \"semantic-ui-react\";\nimport ModalCommon from \"./ModalCommon\";\n\nclass PostList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.show = () => this.setState({\n      open: true\n    });\n\n    this.close = () => this.setState({\n      open: false,\n      inputNameValue: \"\",\n      textAreaValue: \"\"\n    });\n\n    this.state = {\n      open: false,\n      inputNameValue: \"\",\n      textAreaValue: \"\"\n    };\n    this.formHandler = this.formHandler.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleTextAreaChange = this.handleTextAreaChange.bind(this);\n  }\n\n  componentDidMount() {\n    if (!this.props.posts.length) {\n      this.props.getPosts();\n    }\n  }\n\n  handleInputChange(e) {\n    this.setState({\n      inputNameValue: e.target.value\n    });\n  }\n\n  formHandler(e) {\n    const _this$state = this.state,\n          inputNameValue = _this$state.inputNameValue,\n          textAreaValue = _this$state.textAreaValue;\n    const _this$props = this.props,\n          posts = _this$props.posts,\n          match = _this$props.match,\n          addPostCreator = _this$props.addPostCreator;\n    e.preventDefault();\n    let numberOfPosts = posts.length + 1;\n    addPostCreator(parseInt(match.params.id), numberOfPosts, inputNameValue, textAreaValue);\n    this.setState({\n      open: false,\n      inputNameValue: \"\",\n      textAreaValue: \"\"\n    });\n  }\n\n  handleTextAreaChange(e) {\n    this.setState({\n      textAreaValue: e.target.value\n    });\n  }\n\n  renderUserName() {\n    const _this$state2 = this.state,\n          open = _this$state2.open,\n          inputNameValue = _this$state2.inputNameValue,\n          textAreaValue = _this$state2.textAreaValue;\n    const _this$props2 = this.props,\n          user = _this$props2.user,\n          match = _this$props2.match;\n\n    if (user.data.length) {\n      return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        className: \"ui grid segment\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"two wide column left aligned\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        name: \"arrow left\",\n        size: \"big\",\n        color: \"blue\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }), \"back\")), React.createElement(\"div\", {\n        className: \"thirteen wide column fontSize boldFont\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, user.data[parseInt(match.params.id)].name), React.createElement(\"div\", {\n        className: \"one wide column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(ModalCommon, {\n        open: open,\n        onClose: this.close,\n        onClick: this.show,\n        onSubmit: this.formHandler,\n        inputNameValue: inputNameValue,\n        textAreaValue: textAreaValue,\n        onInputChange: this.handleInputChange,\n        onTextAreaChange: this.handleTextAreaChange,\n        text: \"Add Post\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, this.renderList()));\n    }\n\n    return null;\n  }\n\n  renderList() {\n    const _this$props3 = this.props,\n          posts = _this$props3.posts,\n          user = _this$props3.user,\n          match = _this$props3.match;\n\n    if (posts.length) {\n      return posts.map(post => {\n        const location = {\n          pathname: \"/users/\".concat(post.userId, \"/\").concat(post.id),\n          post,\n          user: user.data\n        };\n        return React.createElement(\"div\", {\n          key: post.title,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144\n          },\n          __self: this\n        }, post.userId === parseInt(match.params.id) ? React.createElement(\"div\", {\n          className: \"ui grid segment\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"one wide column right aligned\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"trash alternate big icon blue\",\n          onClick: () => {\n            this.props.deletePostCreator(post.id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: \"twelve wide column left aligned fontSize\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155\n          },\n          __self: this\n        }, post.title), React.createElement(\"div\", {\n          className: \"three wide column right aligned\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: location,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"angle right big right icon\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160\n          },\n          __self: this\n        })))) : null);\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, this.renderUserName());\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    posts: state.postsReducer.posts,\n    user: state.userReducer\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getPosts,\n  getUsers,\n  addPostCreator,\n  deletePostCreator\n})(PostList);","map":{"version":3,"sources":["/home/lukaszinglot/Pulpit/pageprodwa/src/components/PostList.tsx"],"names":["React","Component","connect","getPosts","getUsers","addPostCreator","deletePostCreator","Link","Icon","ModalCommon","PostList","constructor","props","show","setState","open","close","inputNameValue","textAreaValue","state","formHandler","bind","handleInputChange","handleTextAreaChange","componentDidMount","posts","length","e","target","value","match","preventDefault","numberOfPosts","parseInt","params","id","renderUserName","user","data","name","renderList","map","post","location","pathname","userId","title","render","mapStateToProps","postsReducer","userReducer"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  getPosts,\n  getUsers,\n  addPostCreator,\n  deletePostCreator\n} from \"../store/actions\";\nimport { Link } from \"react-router-dom\";\nimport \"./postList.css\";\nimport { Icon } from \"semantic-ui-react\";\nimport { AppState } from \"../store/index.d\";\nimport ModalCommon from \"./ModalCommon\";\n\ninterface PostProps {\n  posts: { title: string; userId: number; id: number; length: number }[];\n  getPosts: () => [];\n  user: {\n    data: { name: string }[];\n  };\n  title: string;\n  addPostCreator: (\n    parseInt: number,\n    numberOfPosts: number,\n    inputNameValue: string,\n    textAreaValue: string\n  ) => void;\n  match: {\n    params: {\n      id: string;\n    };\n  };\n  deletePostCreator: (post: number) => number;\n}\n\ninterface PostState {\n  open: boolean;\n  inputNameValue: string;\n  textAreaValue: string;\n}\n\nclass PostList extends Component<PostProps, PostState> {\n  constructor(props: PostProps) {\n    super(props);\n    this.state = {\n      open: false,\n      inputNameValue: \"\",\n      textAreaValue: \"\"\n    };\n    this.formHandler = this.formHandler.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleTextAreaChange = this.handleTextAreaChange.bind(this);\n  }\n\n  componentDidMount() {\n    if (!this.props.posts.length) {\n      this.props.getPosts();\n    }\n  }\n\n  show = () => this.setState({ open: true });\n  close = () =>\n    this.setState({ open: false, inputNameValue: \"\", textAreaValue: \"\" });\n\n  handleInputChange(e: React.ChangeEvent<HTMLInputElement>) {\n    this.setState({\n      inputNameValue: e.target.value\n    });\n  }\n\n  formHandler(e: React.FormEvent<HTMLFormElement>) {\n    const { inputNameValue, textAreaValue } = this.state;\n    const { posts, match, addPostCreator } = this.props;\n    e.preventDefault();\n    let numberOfPosts = posts.length + 1;\n\n    addPostCreator(\n      parseInt(match.params.id),\n      numberOfPosts,\n      inputNameValue,\n      textAreaValue\n    );\n\n    this.setState({\n      open: false,\n      inputNameValue: \"\",\n      textAreaValue: \"\"\n    });\n  }\n\n  handleTextAreaChange(e: React.FormEvent<HTMLTextAreaElement>) {\n    this.setState({\n      textAreaValue: (e.target as HTMLTextAreaElement).value\n    });\n  }\n\n  renderUserName() {\n    const { open, inputNameValue, textAreaValue } = this.state;\n    const { user, match } = this.props;\n    if (user.data.length) {\n      return (\n        <>\n          <div className=\"ui grid segment\">\n            <div className=\"two wide column left aligned\">\n              <Link to={`/`}>\n                <Icon name=\"arrow left\" size=\"big\" color=\"blue\" />\n                back\n              </Link>\n            </div>\n            <div className=\"thirteen wide column fontSize boldFont\">\n              {user.data[parseInt(match.params.id)].name}\n            </div>\n            <div className=\"one wide column\">\n              <ModalCommon\n                open={open}\n                onClose={this.close}\n                onClick={this.show}\n                onSubmit={this.formHandler}\n                inputNameValue={inputNameValue}\n                textAreaValue={textAreaValue}\n                onInputChange={this.handleInputChange}\n                onTextAreaChange={this.handleTextAreaChange}\n                text=\"Add Post\"\n              />\n            </div>\n          </div>\n          <div>{this.renderList()}</div>\n        </>\n      );\n    }\n    return null;\n  }\n\n  renderList() {\n    const { posts, user, match } = this.props;\n    if (posts.length) {\n      return posts.map(post => {\n        const location = {\n          pathname: `/users/${post.userId}/${post.id}`,\n          post,\n          user: user.data\n        };\n        return (\n          <div key={post.title}>\n            {post.userId === parseInt(match.params.id) ? (\n              <div className=\"ui grid segment\">\n                <div className=\"one wide column right aligned\">\n                  <i\n                    className=\"trash alternate big icon blue\"\n                    onClick={() => {\n                      this.props.deletePostCreator(post.id);\n                    }}\n                  />\n                </div>\n                <div className=\"twelve wide column left aligned fontSize\">\n                  {post.title}\n                </div>\n                <div className=\"three wide column right aligned\">\n                  <Link to={location}>\n                    <i className=\"angle right big right icon\" />\n                  </Link>\n                </div>\n              </div>\n            ) : null}\n          </div>\n        );\n      });\n    }\n  }\n\n  render() {\n    return <div>{this.renderUserName()}</div>;\n  }\n}\n\nconst mapStateToProps = (state: AppState) => {\n  return {\n    posts: state.postsReducer.posts,\n    user: state.userReducer\n  };\n};\n\nexport default connect<AppState>(\n  mapStateToProps,\n  {\n    getPosts,\n    getUsers,\n    addPostCreator,\n    deletePostCreator\n  }\n)(PostList);\n"]},"metadata":{},"sourceType":"module"}